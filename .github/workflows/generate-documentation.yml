name: Generate Documentation

on:
  workflow_dispatch:
  push:
    branches:
      - master
    paths:
      - 'docs/users/**'
      - 'scripts/docs.js'
      - 'src/api/public/api.ts'
      - '.github/workflows/generate-documentation.yml'
      - 'package.json' # we want to rebuild the documentation when libs used by the doc generation change
      - 'typedoc.json'
  pull_request:
    # To manage 'surge-preview' action teardown, add default event types + closed event type
    types: [opened, synchronize, reopened, closed]
    branches:
      - master
    paths:
      - 'docs/users/**'
      - 'scripts/docs.js'
      - 'src/api/public/api.ts'
      - '.github/workflows/generate-documentation.yml'
      - 'package.json' # we want to rebuild the documentation when libs used by the doc generation change
      - 'typedoc.json'

jobs:
  doc_preview:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Publish preview
        id: publish_preview
        uses: afc163/surge-preview@v1
        env:
          # https://playwright.dev/docs/installation/#skip-browser-downloads
          PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1
        with:
          surge_token: ${{ secrets.SURGE_TOKEN }}
          github_token: ${{ secrets.GITHUB_TOKEN }}
          dist: build/docs
          failOnError: true
          teardown: 'true'
          build: |
            npm ci
            npm run docs

  generate_doc:
    if: (github.event_name == 'push' || github.event_name == 'workflow_dispatch') &&  github.event.ref == 'refs/heads/master'
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - name: Get npm cache directory
        id: npm-cache
        run: |
          echo "::set-output name=dir::$(npm config get cache)"
      - name: Setup GitHub cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.npm-cache.outputs.dir }}
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      - name: Install dependencies
        # https://playwright.dev/docs/installation/#skip-browser-downloads
        run: PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD=1 npm ci
      - name: Build docs
        run: npm run docs
      - name: Upload
        uses: actions/upload-artifact@v2
        with:
          name: documentation-${{github.sha}}
          path: build/docs

  push_to_gh_pages:
    if: (github.event_name == 'push' || github.event_name == 'workflow_dispatch') &&  github.event.ref == 'refs/heads/master'
    runs-on: ubuntu-20.04
    needs: generate_doc
    steps:
      - name: Download
        uses: actions/download-artifact@v2
        with:
          name: documentation-${{github.sha}}
      - name: Push to gh-pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./
          keep_files: true
          user_name: 'process-analytics-bot'
          user_email: '62586190+process-analytics-bot@users.noreply.github.com'
